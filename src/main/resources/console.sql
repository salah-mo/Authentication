DROP DATABASE IF EXISTS AUTH;

CREATE DATABASE IF NOT EXISTS AUTH;
USE AUTH;

CREATE TABLE IF NOT EXISTS USERS
(
    ID       INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS SESSIONS
(
    ID      INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT          NOT NULL,
    TOKEN   VARCHAR(255) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS ROLES
(
    ID   INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS PERMISSIONS
(
    ID   INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS CUSTOMERS
(
    ID           INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID      INT          NOT NULL,
    FIRST_NAME   VARCHAR(255) NOT NULL,
    LAST_NAME    VARCHAR(255) NOT NULL,
    EMAIL        VARCHAR(255) NOT NULL,
    PHONE_NUMBER VARCHAR(255),
    ADDRESS      VARCHAR(255),
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE IF NOT EXISTS USER_ROLES
(
    USER_ID INT NOT NULL,
    ROLE_ID INT NOT NULL,
    PRIMARY KEY (USER_ID, ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID)
);

CREATE TABLE IF NOT EXISTS ROLE_PERMISSIONS
(
    ROLE_ID       INT NOT NULL,
    PERMISSION_ID INT NOT NULL,
    PRIMARY KEY (ROLE_ID, PERMISSION_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID),
    FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS (ID)
);